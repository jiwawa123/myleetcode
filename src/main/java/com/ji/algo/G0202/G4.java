package com.ji.algo.G0202;/*
    user ji
    data 2020/2/2
    time 10:27 AM
*/

import java.util.*;

public class G4 {
    public static void main(String[] args) {
        int arr[] = {99812, 99470, 99459, 99412, 99354, 99342, 99149, 99130, 99102, 99020, 98767, 98717, 97971, 97833, 97531, 97493, 97336, 97141, 97127, 95507, 95269, 95132, 95093, 94448, 94178, 94082, 93992, 93926, 93826, 93805, 93733, 93709, 93625, 93601, 92899, 92768, 92682, 92117, 91942, 91919, 91276, 91060, 90911, 90890, 90109, 89877, 89252, 89203, 89022, 88981, 88839, 88333, 88153, 87663, 87157, 87010, 86987, 86836, 86383, 86253, 86153, 85929, 85560, 85533, 85010, 84980, 84897, 84787, 84773, 84513, 84383, 83496, 83465, 82989, 82512, 82246, 82082, 81537, 80884, 80883, 80786, 80655, 80644, 79976, 79921, 79838, 79588, 79361, 79285, 79043, 78956, 78089, 78070, 77959, 77663, 77523, 77376, 77151, 76630, 75963, 75714, 75644, 75467, 75250, 74625, 74368, 74121, 73906, 73853, 73743, 73724, 73674, 73666, 73589, 73147, 72647, 72508, 72416, 72388, 72041, 71993, 71965, 71810, 70922, 70442, 70438, 70187, 70095, 69823, 69058, 68748, 68584, 68521, 68154, 67913, 67485, 67134, 66900, 66882, 66555, 66317, 66113, 65504, 65279, 65036, 64508, 64098, 63926, 63341, 63090, 63058, 63005, 62945, 62740, 61440, 60955, 60689, 60546, 60289, 60279, 60100, 59919, 59909, 58909, 58850, 58640, 58578, 58445, 58269, 58220, 58080, 57801, 57390, 56534, 55920, 55770, 55632, 55631, 55514, 55513, 55463, 55432, 55395, 54989, 54864, 54852, 54697, 54683, 54394, 54287, 54214, 53517, 53441, 52685, 52359, 51912, 51121, 50137, 49878, 49531, 49248, 48970, 48847, 48716, 48572, 48276, 48188, 48154, 47727, 47674, 47447, 47361, 47250, 46038, 45960, 45732, 45440, 45205, 44927, 44659, 42436, 41494, 41264, 41061, 40913, 40859, 40804, 40581, 40414, 39917, 39258, 39204, 38977, 38787, 38586, 38535, 38277, 37885, 37028, 36495, 36046, 36001, 35604, 35302, 35133, 35038, 34312, 34288, 34192, 33101, 32953, 32724, 32319, 32284, 31912, 31689, 31673, 31484, 31456, 31226, 31149, 31114, 30900, 30871, 30619, 30530, 30423, 30081, 29942, 29379, 29092, 28662, 28519, 28131, 28070, 27916, 27658, 27038, 26487, 26427, 26222, 25925, 25687, 25389, 24856, 24397, 24300, 23895, 23879, 23117, 23116, 22882, 22740, 22715, 22665, 22554, 22278, 21736, 21691, 21436, 21289, 20282, 20192, 20072, 19540, 19423, 19127, 18923, 18838, 18437, 18388, 18377, 18251, 18115, 18011, 17525, 17395, 17251, 16883, 15978, 15798, 15522, 15387, 15382, 14415, 14254, 14105, 13414, 13259, 13180, 12839, 12603, 12146, 11889, 11601, 11425, 11359, 9661, 9580, 9513, 9287, 8524, 8505, 7689, 7541, 7105, 6867, 6823, 6603, 6273, 5981, 5695, 5108, 4936, 4881, 4706, 4015, 3601, 3432, 3236, 2458, 2156, 2127, 1475, 452, 445, 363, 337};
        System.out.println(new G4().maxJumps(arr, 203));
    }


    public int maxJumps(int[] arr, int d) {
        int n = arr.length;
        int[][] temp = new int[n][2];
        int dp[] = new int[n];
        int res = 1;
        for (int i = 0; i < n; i++){
            temp[i][0] = arr[i];
            temp[i][1] = i;
        }
        Arrays.sort(temp, new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[] o2) {
                return o1[0] - o2[0];
            }
        });
        for (int i = 0; i < n; i++) {
            int index = temp[i][1]; //编号;
            dp[index] = 1;
            //向左找
            for (int j = index - 1; j >= index - d && j >= 0; j--) {
                if (arr[j] >= arr[index]) break;
                if (dp[j] != 0) dp[index] = Math.max(dp[index], dp[j] + 1);
            }
            //向右找
            for (int j = index + 1; j <= index + d && j < n; j++) {
                if (arr[j] >= arr[index]) break;
                if (dp[j] != 0) dp[index] = Math.max(dp[index], dp[j] + 1);
            }
            res = Math.max(dp[index], res);
        }
        return res;

    }
}
